openapi: '3.0.3'
info:
  description: Api Documentation
  version: '1.0'
  title: Api Documentation
servers:
  - url: 'http://localhost:9090/api'
paths:
  /artists:
    post:
      tags:
        - Artists
      summary: Ajoute un nouvel artiste.
      operationId: addArtist
      requestBody:
        content:
          'application/json':
            schema:
              type: object
              properties:
                name:
                  description: Nom de l'artiste.
                  type: string
                style:
                  description: Style musical de l'artiste.
                  type: string
      responses:
        '201':
          description: Artiste crée avec succès.
          headers:
            Location:
              description: URL de l'artiste crée.
              schema:
                type: string
                format: uri
        '400':
          description: Bad Request
    get:
      summary: Obtient une liste de tous les artistes sauvegardés.
      operationId: getArtists
      responses:
        '200':
          description: OK
          content:
            'application/json':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Artist'
        '404':
          description: Not Found
  /artists/{id}:
    patch:
      tags:
        - Artists
      summary: Modifie les attributs d'un artiste donné.
      operationId: modifyArtist
      parameters:
        - name: id
          in: path
          description: Identifiant de l'artiste à modifier.
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        content:
          'application/json':
            schema:
              type: object
              properties:
                name:
                  description: Nom de l'artiste.
                  type: string
                style:
                  description: Style musical de l'artiste
                  type: string
      responses:
        '200':
          description: Les attributs de l'artiste ont été modifié avec succès.
          headers:
            Location:
              description: URL de l'artiste modifié.
              schema:
                type: string
                format: uri
        '400':
          description: Bad Request
        '404':
          description: Not Found
  /musics:
    post:
      tags:
        - Musics
      summary: Ajoute un nouveau morceau de musique.
      operationId: addMusic
      requestBody:
        content:
          'application/json':
            schema:
              type: object
              properties:
                artist:
                  description: Identifiant de l'artiste.
                  type: integer
                  format: int32
                title:
                  description: Titre du morceau de music.
                  type: string
      responses:
        '201':
          description: music crée
          headers:
            Location:
              description: URL de la music crée
              schema:
                type: string
                format: uri
        '400':
          description: Bad Request
        '404':
          description: Not Found
    get:
      tags:
        - Musics
      summary: Obtient une liste de tous les morceaux de musique sauvegardés.
      operationId: getMusics
      responses:
        '200':
          description: OK
          content:
            'application/json':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Music'
        '400':
          description: Bad Request
        '404':
          description: Not Found
  /playlists:
    post:
      tags:
        - Playlists
      summary: Ajoute une nouvelle playlist.
      operationId: createPlaylist
      requestBody:
        content:
          'application/json':
            schema:
              type: string
      responses:
        '201':
          description: Playlist crée avec succès.
          headers:
            Location:
              description: URL de la music playlist
              schema:
                type: string
                format: uri
        '400':
          description: Bad Request
    get:
      tags:
        - Playlists
      summary: Obtient une liste de toutes les playlists.
      operationId: getPlaylists
      responses:
        '200':
          description: OK
          content:
            'application/json':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Playlist'
        '404':
          description: Not Found
  /playlists/{id}/musics:
    put:
      tags:
        - Playlists
      summary: Ajoute un ou plusieurs morceaux de musique dans une playlist.
      operationId: addMusicToPlaylist
      parameters:
        - name: id
          in: path
          description: Identifiant de la playlist a modifier.
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        content:
          'application/json':
            schema:
              type: array
              items:
                type: integer
                format: int32
      responses:
        '201':
          description: La playlist a été mise à jour avec succès.
          headers:
            Location:
              description: URL de la playlist
              schema:
                type: string
                format: uri
        '400':
          description: Bad Request
        '404':
          description: Not Found
      deprecated: false
components:
  schemas:
    Music:
      description: Ensemble de caractéristiques d'un morceau de musique.
      type: object
      properties:
        title:
          description: Titre du morceau de musique.
          type: string
        artist:
          description: Artiste ayant composé le morceau de musique.
          type: object
        id:
          description: Identifiant auto-incrémenté du morceau de musique.
          type: integer
          format: int32
      title: Music
    Playlist:
      description: Ensemble de caractéristiques d'une playlist.
      type: object
      properties:
        name:
          description: Mom de la playlist
          type: string
        musics:
          description: Morceaux de musique dans la playlist.
          type: array
          items:
            $ref: "#/components/schemas/Music"
        id:
          description: Identifiant auto-incrémenté d'une personne.
          type: integer
          format: int32
      title: Playlist
    Artist:
      description: Ensemble de caractéristiques d'un artiste.
      type: object
      properties:
        name:
          description: Nom de l'artiste.
          type: string
        style:
          description: Style de musique de l'artiste.
          type: string
        id:
          description: Identifiant auto-incrémenté de l'artiste.
          type: integer
          format: int32
      title: Artist