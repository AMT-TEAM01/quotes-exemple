openapi: '3.0.3'
info:
  description: Api Documentation
  version: '1.0'
  title: Api Documentation
servers:
  - url: 'http://localhost:9090/api'
tags:
  - name: Quotes-end-point
    description: Gestion des quotes
  - name: Musics-end-point
    description: Gestion des musics
  - name: Playlists-end-point
    description: Gestion des playlists
  - name: Artists-end-point
    description: Gestion des artists
paths:
  /artists:
    post:
      tags:
        - Artists-end-point
      summary: Ajoute une nouvelle music
      operationId: addArtist
      requestBody:
        content:
          'application/json':
            schema:
              type: object
              properties:
                name:
                  description: nom de l'artiste
                  type: string
                style:
                  description: style de l'artiste
                  type: string
      responses:
        '201':
          description: artiste crée
          headers:
            Location:
              description: URL de l'artiste crée
              schema:
                type: string
                format: uri
    get:
      tags:
        - Artists-end-point
      summary: Obtient une liste de toute les artists
      operationId: getArtists
      responses:
        '200':
          description: OK
          content:
            'application/json':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Artist'
        '404':
          description: Not Found
  /artists/{id}:
    patch:
      tags:
        - Artists-end-point
      summary: Modifie l'artist
      operationId: modifyArtist
      parameters:
        - name: id
          in: path
          description: numéro de l'artist a modifier
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        content:
          'application/json':
            schema:
              type: object
              properties:
                name:
                  description: nom de l'artist
                  type: string
                style:
                  description: style de l'artist
                  type: string
      responses:
        '200':
          description: artist modifier
          headers:
            Location:
              description: URL de l'artiste modifier
              schema:
                type: string
                format: uri
        '404':
          description: Not Found
  /musics:
    post:
      tags:
        - Musics-end-point
      summary: Ajoute une nouvelle music
      operationId: addMusic
      requestBody:
        content:
          'application/json':
            schema:
              type: object
              properties:
                artist:
                  description: id de l'artiste
                  type: integer
                  format: int32
                title:
                  description: titre de la music
                  type: string
      responses:
        '201':
          description: music crée
          headers:
            Location:
              description: URL de la music crée
              schema:
                type: string
                format: uri
    get:
      tags:
        - Musics-end-point
      summary: Obtient une liste de toute les musics
      operationId: getMusics
      responses:
        '200':
          description: OK
          content:
            'application/json':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Music'
        '404':
          description: Not Found
  /playlists:
    post:
      tags:
        - Playlists-end-point
      summary: Ajoute une nouvelle playlist
      operationId: createPlaylist
      requestBody:
        content:
          'application/json':
            schema:
              type: string
      responses:
        '201':
          description: playlist crée
          headers:
            Location:
              description: URL de la music playlist
              schema:
                type: string
                format: uri
    get:
      tags:
        - Playlists-end-point
      summary: Obtient une liste de toute les playlists
      operationId: getPlaylists
      responses:
        '200':
          description: OK
          content:
            'application/json':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Playlist'
        '404':
          description: Not Found
  /playlists/{id}/musics:
    put:
      tags:
        - Playlists-end-point
      summary: Ajoute des musics a la playlist
      operationId: addMusicToPlaylist
      parameters:
        - name: id
          in: path
          description: numéro de la playlist a modifier
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        content:
          'application/json':
            schema:
              type: array
              items:
                type: integer
                format: int32
      responses:
        '200':
          description: playlist update
          headers:
            Location:
              description: URL de la playlist
              schema:
                type: string
                format: uri
      deprecated: false
components:
  schemas:
    Music:
      description: toutes les caractéristiques d'une music
      type: object
      properties:
        title:
          description: titre de la music
          type: string
        artist:
          description: artiste de la music
          type: object
        id:
          description: numéro auto-incrémenté de la music
          type: integer
          format: int32
      title: Music
    Playlist:
      description: toutes les caractéristiques d'une playlist
      type: object
      properties:
        name:
          description: nom de la playlist
          type: string
        musics:
          description: musics de la playlist
          type: array
          items:
            $ref: "#/components/schemas/Music"
        id:
          description: numéro auto-incrémenté de la person
          type: integer
          format: int32
      title: Playlist
    Artist:
      description: toutes les caractéristiques d'un artist
      type: object
      properties:
        name:
          description: nom de l'artiste
          type: string
        style:
          description: style de music de l'artiste
          type: string
        id:
          description: numéro auto-incrémenté de l'artist
          type: integer
          format: int32
      title: Artist